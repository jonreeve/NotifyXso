buildscript {
    ext {
        compose_version = '1.3.0-beta02'
        compose_compiler_version = '1.3.0'
        lifecycle_version = '2.6.0-alpha02'
    }
}

plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.plugin.serialization' version "$kotlin_version"
    id 'kotlin-android'
    // kapt is on the way out (in favour of KSP) as it's slow, but dagger/hilt still needs it for now
    // See https://github.com/google/dagger/issues/2349
    // Could possibly use napt or something but this project's so small, this will do for now.
    id 'org.jetbrains.kotlin.kapt'
    id 'dagger.hilt.android.plugin'
}

android {
    compileSdkVersion 33

    defaultConfig {
        applicationId "com.wasabicode.notifyxso"
        minSdkVersion 22
        targetSdkVersion 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion compose_compiler_version
    }
}

kapt {
    correctErrorTypes true
}
hilt {
    enableAggregatingTask = true
}

dependencies {
    implementation project(":server-data")

    // kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$rootProject.coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$rootProject.coroutines_version"

    // android
    implementation 'androidx.core:core-ktx:1.9.0'
    implementation 'androidx.appcompat:appcompat:1.5.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'com.google.android.material:material:1.6.1'
    // viewModelScope
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    // lifecycleScope
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"
    // collectAsStateWithLifecycle
    implementation "androidx.lifecycle:lifecycle-runtime-compose:$lifecycle_version"

    // hilt
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-compiler:$hilt_version"

    // Compose
    implementation "androidx.compose.runtime:runtime:$compose_version"
    implementation "androidx.compose.ui:ui:$compose_version"
    implementation "androidx.activity:activity-compose:1.5.1" // integration with Activity
    implementation "androidx.compose.foundation:foundation:$compose_version"
    implementation "androidx.compose.foundation:foundation-layout:$compose_version"
    implementation "androidx.compose.material:material:$compose_version"
    implementation "androidx.compose.runtime:runtime-livedata:$compose_version"
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_version"
    debugImplementation "androidx.compose.ui:ui-tooling:$compose_version"
    implementation "com.google.android.material:compose-theme-adapter:1.1.18"

    // ktor
    implementation "io.ktor:ktor-client-core:$ktor_version"
    implementation "io.ktor:ktor-client-okhttp:$ktor_version"
    implementation "io.ktor:ktor-client-content-negotiation:$ktor_version"
    implementation "io.ktor:ktor-serialization-kotlinx-json:$ktor_version"
    implementation "io.ktor:ktor-client-logging-jvm:$ktor_version"

    // test
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
}
